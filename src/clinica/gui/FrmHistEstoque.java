/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clinica.gui;

import clinica.bean.LogEstoque;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author celso
 */
public class FrmHistEstoque extends javax.swing.JFrame {

    DefaultTableModel model;

    /**
     * Creates new form FrmHistEstoque
     */
    public FrmHistEstoque() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTabHistorico = new javax.swing.JTable();
        btnFechar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Listagem do Histórico do produto.");

        jTabHistorico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ação", "Data", "Pessoa", "Destino", "Quantidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTabHistorico.setColumnSelectionAllowed(true);
        jTabHistorico.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTabHistorico);
        jTabHistorico.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTabHistorico.getColumnModel().getColumnCount() > 0) {
            jTabHistorico.getColumnModel().getColumn(0).setResizable(false);
            jTabHistorico.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTabHistorico.getColumnModel().getColumn(1).setResizable(false);
            jTabHistorico.getColumnModel().getColumn(1).setPreferredWidth(10);
            jTabHistorico.getColumnModel().getColumn(4).setResizable(false);
            jTabHistorico.getColumnModel().getColumn(4).setPreferredWidth(10);
        }

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 766, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnFechar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFechar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFechar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabHistorico;
    // End of variables declaration//GEN-END:variables

    public void RecebeDados(List<LogEstoque> lista) {
        if (!lista.isEmpty()) {
            model = (DefaultTableModel) jTabHistorico.getModel();
            
            for (int i = 0; i < lista.size(); i++) {
                model.addRow(new String[]{null, null, null, null, null});
                model.setValueAt(lista.get(i).getTipo(), i, 0);
                model.setValueAt(lista.get(i).getData(), i, 1);
                model.setValueAt(lista.get(i).getPessoa(), i, 2);
                model.setValueAt(lista.get(i).getDestino(), i, 3);
                model.setValueAt(lista.get(i).getQuantidade(), i, 4);
            }            
        }
    }
    
}
